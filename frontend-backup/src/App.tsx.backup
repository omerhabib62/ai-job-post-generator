import { useState } from "react";
import TestPage from "./TestPage";

// Clean minimal App component
import { LoginPage } from "./pages/auth/LoginPage";
import { RegisterPage } from "./pages/auth/RegisterPage";

// Main Pages
import { LandingPage } from "./pages/LandingPage";
import { DashboardPage } from "./pages/dashboard/DashboardPage";
import { NotFoundPage } from "./pages/NotFoundPage";

// Job Posts Pages
import { GenerateJobPostPage } from "./pages/job-posts/GenerateJobPostPage";
import { JobPostsListPage } from "./pages/job-posts/JobPostsListPage";
import { JobPostDetailPage } from "./pages/job-posts/JobPostDetailPage";

function App() {
  const [hasError, setHasError] = useState(false);
  const [isTestMode, setIsTestMode] = useState(true); // Enable test mode

  useEffect(() => {
    console.log("App mounted successfully");
    // Log any potential issues with imports
    try {
      console.log("Checking imports...");
      import("./components/layout/MainLayout").catch((e) =>
        console.error("MainLayout import error:", e)
      );
      import("./contexts/AuthContext").catch((e) =>
        console.error("AuthContext import error:", e)
      );
    } catch (error) {
      console.error("Import error:", error);
      setHasError(true);
    }
  }, []);

  if (isTestMode) {
    return <TestPage />;
  }

  if (hasError) {
    return (
      <div style={{ padding: "2rem", textAlign: "center" }}>
        <h1>Something went wrong</h1>
        <p>
          There was an error loading the application. Please check the console
          for more details.
        </p>
      </div>
    );
  }

  return (
    <BrowserRouter>
      <AuthProvider>
        <Debug />
        <Routes>
          {/* Public Routes */}
          <Route path="/" element={<LandingPage />} />
          <Route path="/auth/login" element={<LoginPage />} />
          <Route path="/auth/register" element={<RegisterPage />} />

          {/* Protected Routes */}
          <Route element={<ProtectedRoute />}>
            <Route path="/dashboard" element={<DashboardPage />} />
            <Route path="/job-posts">
              <Route index element={<JobPostsListPage />} />
              <Route path="generate" element={<GenerateJobPostPage />} />
              <Route path=":id" element={<JobPostDetailPage />} />
            </Route>
          </Route>

          {/* Admin Routes */}
          <Route element={<ProtectedRoute allowedRoles={["admin"]} />}>
            {/* Add admin routes here when needed */}
          </Route>

          {/* 404 Page */}
          <Route path="/404" element={<NotFoundPage />} />
          <Route path="*" element={<Navigate to="/404" replace />} />
        </Routes>
      </AuthProvider>
    </BrowserRouter>
  );
}

export default App;
